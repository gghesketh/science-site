{"version":3,"sources":["webpack:///./src/components/people/people.js","webpack:///./src/components/people/people-container.js","webpack:///./src/pages/people/index.js"],"names":["People","markdown","className","icon","faUsers","size","map","person","key","node","frontmatter","name","alt","fluid","image","childImageSharp","title","email","to","dangerouslySetInnerHTML","__html","html","PeopleContainer","query","sortMarkdown","edges","length","IndexPage"],"mappings":"0NAwEeA,G,UA5DA,SAAC,GAAD,IACbC,EADa,EACbA,SADa,OAGb,yBAAKC,UAAU,UACb,iCACE,gCACE,sCAGA,kBAAC,IAAD,CAAiBC,KAAMC,IAASC,KAAK,QAEvC,wBAAIH,UAAU,gBAEVD,EAASK,KAAI,SAACC,GAAD,OACX,wBAAIC,IAAKD,EAAOE,KAAKC,YAAYC,MAC/B,kBAAC,IAAD,CACEC,IAAKL,EAAOE,KAAKC,YAAYC,KAC7BT,UAAU,qBACVW,MAAON,EAAOE,KAAKC,YAAYI,MAAMC,gBAAgBF,QAEvD,6BACE,4BAAKN,EAAOE,KAAKC,YAAYC,MAC7B,4BAAKJ,EAAOE,KAAKC,YAAYM,OAE3BT,EAAOE,KAAKC,YAAYO,OAEtB,kBAAC,IAAD,CACEf,UAAU,qBACVgB,GAAE,UAAYX,EAAOE,KAAKC,YAAYO,OAErCV,EAAOE,KAAKC,YAAYO,OAI/B,yBAAKE,wBAAyB,CAAEC,OAAQb,EAAOE,KAAKY,kB,YCFrDC,EArCS,WACtB,IAAMC,EAAK,OA2BLtB,EAAWuB,YAAaD,EAAMtB,SAASwB,MAAO,CAAC,QAAS,SAE9D,OACExB,EAASyB,OAAS,EACd,kBAAC,EAAD,CAAQzB,SAAUA,IAClB,M,YC3BO0B,UAPG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKX,MAAM,WACX,kBAAC,EAAD,S","file":"component---src-pages-people-index-js-4fa9ebd35ef751092b8e.js","sourcesContent":["/* eslint-disable react/no-danger */\n\nimport Image from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport Link from '../link/link';\n\nimport './people.css';\n\nconst People = ({\n  markdown,\n}) => (\n  <div className=\"people\">\n    <section>\n      <header>\n        <h1>\n          People\n        </h1>\n        <FontAwesomeIcon icon={faUsers} size=\"2x\" />\n      </header>\n      <ul className=\"people__list\">\n        {\n          markdown.map((person) => (\n            <li key={person.node.frontmatter.name}>\n              <Image\n                alt={person.node.frontmatter.name}\n                className=\"people__list-image\"\n                fluid={person.node.frontmatter.image.childImageSharp.fluid}\n              />\n              <div>\n                <h2>{person.node.frontmatter.name}</h2>\n                <h3>{person.node.frontmatter.title}</h3>\n                {\n                  person.node.frontmatter.email\n                  && (\n                    <Link\n                      className=\"person__list-email\"\n                      to={`mailto:${person.node.frontmatter.email}`}\n                    >\n                      {person.node.frontmatter.email}\n                    </Link>\n                  )\n                }\n                <div dangerouslySetInnerHTML={{ __html: person.node.html }} />\n              </div>\n            </li>\n          ))\n        }\n      </ul>\n    </section>\n  </div>\n);\n\nPeople.propTypes = {\n  markdown: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        frontmatter: PropTypes.shape({\n          email: PropTypes.string,\n          image: PropTypes.shape({}),\n          name: PropTypes.string,\n          title: PropTypes.string,\n        }),\n        html: PropTypes.node,\n      }),\n    }),\n  ).isRequired,\n};\n\nexport default People;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport People from './people';\n\nimport sortMarkdown from '../../utils/sort-markdown';\n\nconst PeopleContainer = () => {\n  const query = useStaticQuery(\n    graphql`\n      query {\n        markdown: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/people/\" } }) {\n          edges {\n            node {\n              html\n              frontmatter {\n                email\n                image {\n                  childImageSharp {\n                    fluid(quality: 90, maxWidth: 300) {\n                      ...GatsbyImageSharpFluid_withWebp\n                    }\n                  }\n                }\n                name\n                title\n                order\n              }\n            }\n          }\n        }\n      }\n    `,\n  );\n\n  const markdown = sortMarkdown(query.markdown.edges, ['order', 'name']);\n\n  return (\n    markdown.length > 0\n      ? <People markdown={markdown} />\n      : null\n  );\n};\n\nexport default PeopleContainer;\n","import React from 'react';\n\nimport Layout from '../../components/layout/layout';\nimport People from '../../components/people/people-container';\nimport SEO from '../../components/seo/seo';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"People\" />\n    <People />\n  </Layout>\n);\n\nexport default IndexPage;\n"],"sourceRoot":""}